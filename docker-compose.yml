version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    env_file:
      - ./.env      
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.4.6
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # http://kafka.apache.org/documentation.html#brokerconfigs
      # 日志滚动的周期时间(小时,毫秒，log.roll.ms优先级更高)，到达指定周期时强制生成一个新的segment
      KAFKA_LOG_ROLL_MS: 10000
      # 过期segment处理算法，默认delete
      KAFKA_CLEANUP_POLICY: delete
      # 日志保留时间(小时，分钟，毫秒 优先级依次升高)，超出保留时间的日志执行cleanup.policy定义的操作
      KAFKA_LOG_RETENTION_MS: 100000
      # log checker的检测是否需要删除文件的周期,默认300000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 50000
      # 删除日志文件前的保留一段时间。默认60000
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 0 
      # 每个segment的最大容量上限(默认1GB),到达指定容量时会强制生成一个新的segment
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      # partition:replica[:cleanup.policy] join with ","
      KAFKA_CREATE_TOPICS: "spider_data:1:1,spider_task:1:1:compact"     
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    restart: unless-stopped
    hostname: kafka-manager
    ports:
      - "9093:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      TZ: CST-8   
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.1 
    restart: unless-stopped
    ports:
      - "5601:5601"
    env_file:
      - ./.env
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200 
      ELASTICSEARCH_URL: http://es:9200 
      ELASTICSEARCH_USERNAME: elastic 
      ELASTICSEARCH_PASSWORD: kd2020 
    restart: unless-stopped 
  es:
    privileged: true 
    image: elasticsearch:7.9.1
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: single-node
    volumes:
      - ./config/es.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./data/es:/usr/share/elasticsearch/data 
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
